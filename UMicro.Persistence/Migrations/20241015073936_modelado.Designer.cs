// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UMicro.Persistence.Data;

#nullable disable

namespace UMicro.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241015073936_modelado")]
    partial class modelado
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UMicro.Domain.Modelo.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaModificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Autores", (string)null);
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Editorial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaCreado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaModificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre_edit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Editoriales", (string)null);
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Libros", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("anio_publicacion")
                        .HasColumnType("int");

                    b.Property<int>("autorID")
                        .HasColumnType("int");

                    b.Property<int>("editorialID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaModificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("autorID");

                    b.HasIndex("editorialID");

                    b.ToTable("Libros", (string)null);
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Libros", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Autor", "autor")
                        .WithMany("Libro")
                        .HasForeignKey("autorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Editorial", "ditorial")
                        .WithMany("Libro")
                        .HasForeignKey("editorialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autor");

                    b.Navigation("ditorial");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Autor", b =>
                {
                    b.Navigation("Libro");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Editorial", b =>
                {
                    b.Navigation("Libro");
                });
#pragma warning restore 612, 618
        }
    }
}
